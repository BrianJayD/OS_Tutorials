1. Signals are asynchronous events sent to processes and threads. 
Their purpose is to innterupt the current event that the process/thread 
is doing and give it another event to do. 


2. SIGINT sends a signal to interrupt the process, causing it to terminate.
SIGSTP causes a process to suspend its current action, for where it can either continue
or be terminated, determined by the next signal sent. 
SIGCONT allows a suspened process to continue executing.


3. The kill() system call terminates any process that it is sent to. Once initiated,
it cannot be handled by the user. The waitpid() system call waits for a process to
change states before it executes its command.


4. A linked list is a set of nodes which contain some sort of information in a 
program. For a queue, the nodes are added in a FIFO order. This means First In First out.
The first node added to the linked list will be the first node to leave the linked list. 
Some functions that are required for a linked list are: push() which adds a new node to the list, 
and pop() which removes the first node from the linked list.

5. The strcture of a linked list usually has a struct which creates nodes which hold a type of informatiom.
They also usually contain two needed functions: a push() and a pop(). Push() adds a node into the linked 
list, and pop takes away a node from the linked list. The node that's removed depends on how the linked list 
is implemented. For FIFO, the first node added is removed. For FILO, the last node is removed.